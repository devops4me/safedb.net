
[vpn]

vpn.id         =  rb>> @f[:secrets][:vpn_id]
vpn.filename   =  rb>> @s[:vpn_id] + ".ovpn"
export.folder  =  rb>> File.join( Dir.home, ".config/safe.db" )
vpn.filepath   =  rb>> File.join( @s[:export_folder], @s[:vpn_filename] )
vpn.username   =  rb>> @f[:secrets][:username]
vpn.password   =  rb>> @f[:secrets][:@password]
safe.write.cmd =  rb>> "safe write --script " + @s[:vpn_filepath]

nm.import.cmd  =  rb>> "sudo nmcli connection import type openvpn file " + @s[:vpn_filepath]
nm.default.cmd =  rb>> "nmcli connection modify " + @s[:vpn_id] + " ipv4.never-default true"
nm.user.cmd    =  rb>> "nmcli connection modify " + @s[:vpn_id] + " +vpn.data username=" + @s[:vpn_username]
nm.reload.cmd  =  rb>> "sudo nmcli connection reload " + @s[:vpn_id]
nm.flags.cmd   =  rb>> "nmcli connection modify " + @s[:vpn_id] + " +vpn.data password-flags=0"
this.user      =  rb>> Etc.getlogin()

nm.directory   =  /etc/NetworkManager/system-connections
nm.filepath    =  rb>> File.join @s[:nm_directory], @s[:vpn_id]
nm.cache.name  =  rb>> @s[:vpn_id] + ".ini"
nm.cache.path  =  rb>> File.join( Gem.user_home(), @s[:nm_cache_name] )

chown.cmd.1    =  rb>> "sudo chown " + @s[:this_user] + ":" + @s[:this_user] + " " + @s[:nm_filepath]
chown.cmd.2    =  rb>> "sudo chown root:root " + @s[:nm_filepath]

nm.conn.up     =  rb>> "nmcli connection up " + @s[:vpn_id]
nm.restart     =  sudo service network-manager restart

nm.conn.off    =  rb>> "nmcli con down id " + @s[:vpn_id]
nm.conn.del    =  rb>> "nmcli connection delete " + @s[:vpn_id]
